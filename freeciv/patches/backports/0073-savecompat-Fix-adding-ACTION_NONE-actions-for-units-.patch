From 5da2436f71a1d1e17e5ba0b806f24434e29b32d3 Mon Sep 17 00:00:00 2001
From: Marko Lindqvist <cazfi74@gmail.com>
Date: Thu, 9 May 2024 18:13:43 +0300
Subject: [PATCH 73/73] savecompat: Fix adding ACTION_NONE actions for units
 with activities

See RM #577

Signed-off-by: Marko Lindqvist <cazfi74@gmail.com>
---
 server/savegame/savecompat.c | 17 +++++++++++++++++
 server/savegame/savegame3.c  |  6 +++++-
 2 files changed, 22 insertions(+), 1 deletion(-)

diff --git a/server/savegame/savecompat.c b/server/savegame/savecompat.c
index 944bfdcb0d..322aae8644 100644
--- a/server/savegame/savecompat.c
+++ b/server/savegame/savecompat.c
@@ -2539,17 +2539,26 @@ static void compat_load_030300(struct loaddata *loading,
                                         "player%d.u%d.activity", plrno, unro);
 
         if (ei >= 0 && ei < loading->activities.size) {
+          bool found = FALSE;
+
           activity = unit_activity_by_name(loading->activities.order[ei],
                                            fc_strcasecmp);
+
           act = activity_default_action(activity);
 
           for (i = 0; i < loading->action.size; i++) {
             if (act == loading->action.order[i]) {
               secfile_insert_int(loading->file, i, "player%d.u%d.action",
                                  plrno, unro);
+              found = TRUE;
               break;
             }
           }
+
+          if (!found) {
+            secfile_insert_int(loading->file, ACTION_NONE, "player%d.u%d.action",
+                               plrno, unro);
+          }
         }
       }
     } player_slots_iterate_end;
@@ -3414,6 +3423,8 @@ static void compat_load_dev(struct loaddata *loading)
                                         "player%d.u%d.activity", plrno, unro);
 
         if (ei >= 0 && ei < loading->activities.size) {
+          bool found = FALSE;
+
           activity = unit_activity_by_name(loading->activities.order[ei],
                                            fc_strcasecmp);
           act = activity_default_action(activity);
@@ -3422,9 +3433,15 @@ static void compat_load_dev(struct loaddata *loading)
             if (act == loading->action.order[i]) {
               secfile_insert_int(loading->file, i, "player%d.u%d.action",
                                  plrno, unro);
+              found = TRUE;
               break;
             }
           }
+
+          if (!found) {
+            secfile_insert_int(loading->file, ACTION_NONE, "player%d.u%d.action",
+                               plrno, unro);
+          }
         }
       }
     } player_slots_iterate_end;
diff --git a/server/savegame/savegame3.c b/server/savegame/savegame3.c
index 0a4726d538..137a990700 100644
--- a/server/savegame/savegame3.c
+++ b/server/savegame/savegame3.c
@@ -6197,7 +6197,11 @@ static bool sg_load_player_unit(struct loaddata *loading,
   sg_warn_ret_val(secfile_lookup_int(loading->file, &ei,
                                      "%s.action", unitstr), FALSE,
                   "%s", secfile_error());
-  action = loading->action.order[ei];
+  if (ei == ACTION_NONE) {
+    action = ACTION_NONE;
+  } else {
+    action = loading->action.order[ei];
+  }
 
   punit->birth_turn
     = secfile_lookup_int_default(loading->file, game.info.turn,
-- 
2.43.0

